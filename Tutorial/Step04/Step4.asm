global __main: label; // объявление глобальной метки.
	
data ".MyData"        // секция инициализированных данных
    // массив А из 16 64-разрядных слов заполняется начальными значениями
    global A: long[16] = ( 0hL, 1hL, 2hL, 3hL, 4hL, 5hL, 6hL, 7hL, 8hL, 9hL,
                          0AhL, 0BhL, 0ChL, 0DhL, 0EhL, 0FhL);
end ".MyData";	
	
nobits ".MyData1"     // секция неинициализированных данных.
    global B:long[16];// объявляется массив В из 16 64-разрядных слов
    global C:long[16];// объявляется массив С из 16 64-разрядных слов
end ".MyData1";	
	
begin ".textAAA"      // начало секции кода.
<__main>	
    // простое копирование массива данных на скалярном процессоре
    ar0 = A;	
    ar1 = B;	
    gr1 = 32;         // счётчик цикла (32 цикла для копирования 16 64-bit слов)
    gr1--;            // устанавливается флаг для первого вхождения в цикл
<Loop>	
    // если условие выполнено, осуществляется отложенный переход на метку Loop
    if > delayed goto Loop  with gr1--;
    // чтение из памяти  32-разрядного слова
    gr2 = [ar0++];
    // запись в память 32-разрядного слова
    [ar1++] = gr2;
	
    // копирование массива данных при помощи регистровых пар
    ar0 = A;	
    ar1 = C;	
    gr1 = 16;         // счётчик цикла (16 циклов для копирования 16 64-bit слов)
    gr1--;            // устанавливается флаг для первого вхождения в цикл
<Loop1>	
    // если условие выполнено, осуществляется отложенный переход на метку Loop1
    if > delayed goto Loop1 with gr1--;
    // чтение из памяти  64-разрядного слова
    gr2,ar2 = [ar0++];
    // запись в память 64-разрядного слова
    [ar1++] = ar2,gr2;
	
    return;	
end ".textAAA";       // признак окончания секции кода.
